{
    "root": {
        "data": {
            "id": "cjank4k68uw0",
            "created": 1650009518773,
            "text": "基础概念"
        },
        "children": [
            {
                "data": {
                    "id": "cjankbnb38g0",
                    "created": 1650009534200,
                    "text": "JSX",
                    "layout_mind_offset": {
                        "x": 16,
                        "y": -182
                    },
                    "layout": null
                },
                "children": [
                    {
                        "data": {
                            "id": "cjankdaqdnk0",
                            "created": 1650009537793,
                            "text": "1.一种javascript语法拓展\n2.jsx也是一种表达式\n本质上就是react babel能解析的代码,解析成功React.creElement(.....)",
                            "layout": null
                        },
                        "children": []
                    },
                    {
                        "data": {
                            "id": "cjc74m8sexc0",
                            "created": 1650166285596,
                            "text": "jsx经历了从 javascript代码->reactDom对象->真实的dom对象",
                            "layout": null
                        },
                        "children": []
                    }
                ]
            },
            {
                "data": {
                    "id": "cjao2hgwk280",
                    "created": 1650010957428,
                    "text": "组件",
                    "layout_mind_offset": {
                        "x": 351.2500052712858,
                        "y": 99.99999865889555
                    },
                    "expandState": "expand",
                    "layout": null
                },
                "children": [
                    {
                        "data": {
                            "id": "cjao2q8989s0",
                            "created": 1650010976496,
                            "text": "1.方式一\n通过函数的形式\n\n2.方式二通过class的形式\nclass具有额外的特性",
                            "layout": null
                        },
                        "children": []
                    },
                    {
                        "data": {
                            "id": "cjaobyebgc80",
                            "created": 1650011699555,
                            "text": "注意： 组件名称必须以大写字母开头。",
                            "layout": null
                        },
                        "children": []
                    },
                    {
                        "data": {
                            "id": "cjapt53r9x40",
                            "created": 1650015867454,
                            "text": "生命周期",
                            "layout": null
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "cjapt7rw3o00",
                                    "created": 1650015873267,
                                    "text": "react 16.4后只有三个生命周期\n\n1.componentDidMount   组件挂在时触发\n2.componentDidUpdate  组件更新数据时触发\n3.componentWillUnmount 组件卸载时触发",
                                    "layout": null
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "cjbpybw51ls0",
                                    "created": 1650117834009,
                                    "text": "21",
                                    "image": "https://gitee.com/name-also/km/raw/main/img/Snipaste_2022-04-16_22-04-52.png",
                                    "imageTitle": "",
                                    "imageSize": {
                                        "width": 0,
                                        "height": 0
                                    },
                                    "layout": null
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "cjaq6hdpxjc0",
                            "created": 1650016912912,
                            "text": "时间绑定 和 普通javascript行内属性差不多\nclass类中注册时间的三种方式",
                            "expandState": "collapse",
                            "layout": null
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "cjaq7z227s00",
                                    "created": 1650017029753,
                                    "text": "1.constructor(props) {\n super(props);\n this.state = {isToggleOn: true\n}; // 为了在回调中使用 `this`，这个绑定是必不可少的 this.handleClick = this.handleClick.bind(this); }",
                                    "layout": null
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "cjaqaqtju5c0",
                                    "created": 1650017246917,
                                    "text": "2.\n// 此语法确保 `handleClick` 内的 `this` 已被绑定。  // 注意: 这是 *实验性* 语法。\nCreate React App\n 默认启用此语法。\n handleClick = () => {    console.log('this is:', this);  }",
                                    "layout": null
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "cjaq82rcjqg0",
                                    "created": 1650017037813,
                                    "text": " 3, <button onClick={() => this.handleClick()}>",
                                    "layout": null
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "cjbpiuta4io0",
                            "created": 1650116621368,
                            "text": "dom对象获取",
                            "layout": null
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "cjbpj0nm0b40",
                                    "created": 1650116634086,
                                    "text": "通过 concustor中赋值\nthis.testRef = React.createRef\n\n<div ref={this.testRef}>",
                                    "layout": null
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "cjbqjmjc2bk0",
                            "created": 1650119502826,
                            "text": "父子组件数据传递的方式",
                            "expandState": "expand",
                            "layout": null
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "cjbqjv18ka80",
                                    "created": 1650119521323,
                                    "text": "props",
                                    "expandState": "expand",
                                    "layout": null,
                                    "priority": 1
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "cjbqjzmdlbc0",
                                    "created": 1650119531308,
                                    "text": "context方案\n\n孙组件\n\nconst userContext = React.createContext(\"default value\")\n\nconst UserProvider = userContext.Provider\nconst UserConsumer = usercontext.Consumer\n\nexport {UserProvider,UserConsumer}\n\nIMPORT\n根\n<UserProvider value=\"我就是要传的\">\n<A></A>\n</UserProvider>\n\nIMPORT \n孙\n<div>\n<UserConsumer>\n  {username}\n</UserConsumer>\n</div>",
                                    "layout": null,
                                    "priority": 2
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "cjicd7b4bds0",
                                    "created": 1650790423651,
                                    "text": "context方案\n标签内形式\n<ThemeContext.Provider value={this.state.theme}>\n<Toolbar changeTheme={this.toggleTheme} />        </ThemeContext.Provider>\n\n孙组件\n通过this.content接收",
                                    "priority": 3,
                                    "layout_right_offset": {
                                        "x": 24.00000197092686,
                                        "y": 0
                                    }
                                },
                                "children": []
                            }
                        ]
                    }
                ]
            }
        ]
    },
    "template": "right",
    "theme": "fresh-soil",
    "version": "1.4.43"
}